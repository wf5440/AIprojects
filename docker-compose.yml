version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: rust-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-rustapp}
      POSTGRES_USER: ${POSTGRES_USER:-rustuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rustpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-rustuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: rust-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Rust 后端
  backend:
    build: ./backend
    container_name: rust-backend
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-rustuser}:${POSTGRES_PASSWORD:-rustpass}@postgres:5432/${POSTGRES_DB:-rustapp}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      PORT: 8080
      RUST_LOG: info
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # React 前端
  frontend:
    build: ./frontend
    container_name: rust-frontend
    environment:
      VITE_API_BASE: /api
      VITE_WS_URL: ws://localhost/ws
    ports:
      - "80:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # 监控 (可选)
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: rust-fullstack-network